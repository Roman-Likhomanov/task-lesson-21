{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://task-lesson-21/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://task-lesson-21/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://task-lesson-21/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://task-lesson-21/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://task-lesson-21/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://task-lesson-21/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://task-lesson-21/./src/renderField.ts","webpack://task-lesson-21/./src/isCellAlive.ts","webpack://task-lesson-21/./src/getNextGeneration.ts","webpack://task-lesson-21/./src/getNextCellState.ts","webpack://task-lesson-21/./src/getNumberOfNeighbour.ts","webpack://task-lesson-21/./src/isAnyoneAlive.ts","webpack://task-lesson-21/./src/gameOfLife.ts","webpack://task-lesson-21/./src/index.ts"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export function renderField(\n  el: HTMLElement,\n  field: boolean[][],\n  cb: (...args: number[]) => void\n) {\n  el.innerHTML = `<table>\n        <tbody>\n        ${field\n          .map(\n            (row, y) =>\n              `<tr>${row\n                .map(\n                  (cell, x) => `<td\n                      class=\"cell cell--${cell ? \"alive\" : \"dead\"}\"\n                      data-x=\"${x}\" data-y=\"${y}\"\n                      >\n                      </td>`\n                )\n                .join(\"\")}</tr>`\n          )\n          .join(\"\")}\n        </tbody>\n        </table>`;\n  const table = el.querySelector(\"table\");\n  if (!table) {\n    return;\n  }\n\n  table.addEventListener(\"click\", (ev) => {\n    const target = ev.target as HTMLTextAreaElement;\n\n    if (!target.matches(\".cell\")) {\n      return;\n    }\n    const x = Number(target.getAttribute(\"data-x\"));\n    const y = Number(target.getAttribute(\"data-y\"));\n    cb(x, y);\n  });\n}\n","export function isCellAlive(field: boolean[][], x: number, y: number): boolean {\n  if (y < 0 || y >= field.length || x < 0 || x > field.length) {\n    return false;\n  }\n  return Boolean(field[y][x]);\n}\n","import { getNextCellState } from \"./getNextCellState\";\n\nexport function getNextGeneration(field: boolean[][]) {\n  return field.map((row, y) =>\n    row.map((cell, x) => getNextCellState(field, x, y))\n  );\n}\n","import { getNumberOfNeighbour } from \"./getNumberOfNeighbour\";\nimport { isCellAlive } from \"./isCellAlive\";\n\nexport function getNextCellState(field: boolean[][], x: number, y: number) {\n  const liveNeighbour = getNumberOfNeighbour(field, x, y);\n  const isAlive = isCellAlive(field, x, y);\n\n  if (\n    (isAlive && (liveNeighbour === 3 || liveNeighbour === 2)) ||\n    (!isAlive && liveNeighbour === 3)\n  ) {\n    return true;\n  }\n  return false;\n}\n","import { isCellAlive } from \"./isCellAlive\";\n\nexport function getNumberOfNeighbour(\n  field: boolean[][],\n  x: number,\n  y: number\n): number {\n  let num = 0;\n\n  for (let i = y - 1; i <= y + 1; i++) {\n    for (let j = x - 1; j <= x + 1; j++) {\n      if (i === y && j === x) {\n        continue;\n      }\n      num += Number(isCellAlive(field, j, i));\n    }\n  }\n  return num;\n}\n","export function isAnyoneAlive(field: boolean[][]): boolean {\n  for (let i = 0; i < field.length; i += 1) {\n    const row = field[i];\n    for (let j = 0; j < row.length; j += 1) {\n      const cell = row[j];\n      if (cell) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n","import { renderField } from \"./renderField\";\nimport { getNextGeneration } from \"./getNextGeneration\";\nimport { isAnyoneAlive } from \"./isAnyoneAlive\";\n\nconst initialField: boolean[][] = Array(10)\n  .fill(0)\n  .map((el) => Array(10).fill(false));\n\nexport function gameOfLife(el: HTMLElement, step = 1000) {\n  let stepInterval: number;\n\n  let field = initialField.map((el) => [...el]);\n  const gameField = document.createElement(\"div\");\n\n  function handleUserClick(x: number, y: number) {\n    field[y][x] = !field[y][x];\n    renderField(gameField, field, handleUserClick);\n  }\n\n  gameField.classList.add(\"game-field\");\n  renderField(gameField, field, handleUserClick);\n  el.appendChild(gameField);\n\n  const startButton = document.createElement(\"button\");\n  startButton.classList.add(\"game-control\");\n  startButton.innerHTML = \"Start\";\n  el.appendChild(startButton);\n\n  const resetButton = document.createElement(\"button\");\n  resetButton.classList.add(\"game-reset\");\n  resetButton.innerHTML = \"Reset\";\n  el.appendChild(resetButton);\n\n  const inputRange = document.createElement(\"input\");\n  inputRange.setAttribute(\"type\", \"range\");\n  el.appendChild(inputRange);\n\n  inputRange.addEventListener(\"change\", (ev) => {\n    step = Number(inputRange.value) * 20;\n  });\n\n  let arr: string[] = [];\n\n  startButton.addEventListener(\"click\", (event) => {\n    const target = event.target as HTMLElement;\n    const buttonText = target.innerHTML;\n    if (buttonText === \"Stop\") {\n      target.innerHTML = \"Start\";\n      clearTimeout(stepInterval);\n    } else {\n      target.innerHTML = \"Stop\";\n      field = getNextGeneration(field);\n      renderField(gameField, field, handleUserClick);\n\n      stepInterval = window.setTimeout(function interval() {\n        arr.push(field.toString());\n        if (arr[arr.length - 1] === arr[arr.length - 3]) {\n          startButton.innerHTML = \"Start\";\n          arr = [];\n          return;\n        }\n        field = getNextGeneration(field);\n        renderField(gameField, field, handleUserClick);\n\n        if (!isAnyoneAlive(field)) {\n          startButton.innerHTML = \"Start\";\n          return;\n        }\n        window.setTimeout(interval, step);\n      }, step);\n    }\n  });\n\n  resetButton.addEventListener(\"click\", () => {\n    field = initialField.map((el) => [...el]);\n    renderField(gameField, field, handleUserClick);\n  });\n}\n","import \"./styles.css\";\nimport { gameOfLife } from \"./gameOfLife\";\n\nconst gameWrapper1 = document.createElement(\"div\");\nconst gameWrapper2 = document.createElement(\"div\");\n\ndocument.body.appendChild(gameWrapper1);\ndocument.body.appendChild(gameWrapper2);\n\ngameOfLife(gameWrapper1);\ngameOfLife(gameWrapper2);\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","renderField","el","field","cb","innerHTML","map","row","y","cell","x","join","table","querySelector","addEventListener","ev","target","matches","Number","getAttribute","isCellAlive","Boolean","getNextGeneration","liveNeighbour","num","j","getNumberOfNeighbour","isAlive","getNextCellState","isAnyoneAlive","initialField","fill","gameOfLife","stepInterval","step","gameField","document","createElement","handleUserClick","classList","add","appendChild","startButton","resetButton","inputRange","setAttribute","value","event","clearTimeout","window","setTimeout","interval","push","gameWrapper1","gameWrapper2","body"],"sourceRoot":""}